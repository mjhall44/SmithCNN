import SmithCNN
import netFunctions

#to train the network
netname     = 'myNetwork'
trainset    = 'test_mini/'
testset     = 'train_mini/'
ntimepts = 52 # number of samples for waves
#for training networks from datasets
SmithCNN.trainnet(netname,ntimepts, trainset,testset)
#input: netname - the name to save the network under
#               - can be trained, or use the SmithCNNnet pretrained network
#       ntimepts- the number of samples (1 x ntimepts) for the input waveforms, not including label
#       trainset- the folder where file(s) to train the network are located
#               - train files can be created using createTrainingFiles.m
#               - train files should have hand labeled waveforms with spikes (1) or noise (0)
#               - in the format [0 wave; ... for noise
#                                1 wave;];   for spike
#       testset - the folder where file(s) to be tested are located
#               - test files should have hand labeled waveforms with spikes (1) or noise (0)
#               - in the format [0 wave; ... for noise
#                                1 wave;];   for spike
#output:        - saves a keras network to the current folder


modeldir= '' #where network saved folder is contained
netname = 'SmithCNNnet' # change or comment if using your own network
testdir = 'Z:/SmithLab/prjNAS/NASNet/tests_m2/'
testdir = 'D:/SmithSaves/test3/'
savedir = 'labels/' 

#to sweep possible gamma values
gamma = netFunctions.gammasweep(netname,modeldir, testdir) #returns the best gamma value for testing dir
#input: netname - the name of the chosen network
#               - can be trained, or use the SmithCNNnet pretrained network
#       modeldir- the folder where the keras network save folder is stored
#       testdir - the folder where file(s) to be tested are located
#               - test files should have hand labeled waveforms with spikes (1) or noise (0)
#               - in the format [0 wave; ... for noise
#                                1 wave;];   for spike
#output:        - returns the averaged best value for gamma across all files

#to get network predictions for input waveforms
predicts = netFunctions.getPredicts(netname,modeldir, testdir, savedir)
#input: netname - the name of the chosen network
#               - can be trained, or use the SmithCNNnet pretrained network
#       modeldir- the folder where the keras network save folder is stored
#       testdir - the folder where file(s) to be tested are located
#               - must be in format 'pathtofile/'
#               - test files can be generated by createTestingFiles.m
#               - or have the format [0 wave; ...
#                                     0 wave;];
#       gamma   - threshold value selected such that predictions > gamma are spikes
#       savedir - optional argument, saves csv to folder or current directory
#output:        - in same format as .csv where each column (header labeled by file input name)
#               - contains the predicts for the waveforms


#to get network labels for input waveforms
#gamma  = 0.48 #use any gamma, or determine best gamma from sweep
labels = netFunctions.getLabels(netname,modeldir, testdir, gamma, savedir)
#getLabels returns predicted binary labels at a given gamma threshold
#input: netname - the name of the chosen network
#               - can be trained, or use the SmithCNNnet pretrained network
#       modeldir- the folder where the keras network save folder is stored
#       testdir - the folder where file(s) to be tested are located
#               - must be in format 'pathtofile/'
#               - test files can be generated by createTestingFiles.mat
#               - or have the format [0 wave; ...
#                                     0 wave;];
#       gamma   - threshold value selected such that predictions > gamma are spikes
#       savedir - optional argument, saves csv and labeled mats to folder or current directory
#output:        - in same format as .csv where each column (header labeled by file input name)
#               - contains the predicted labels for the waveforms 

